# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'recipe_list.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_RecipeListWindow(object):
    def setupUi(self, RecipeListWindow):
        RecipeListWindow.setObjectName("RecipeListWindow")
        RecipeListWindow.resize(846, 600)
        RecipeListWindow.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        RecipeListWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.centralwidget = QtWidgets.QWidget(RecipeListWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.recipesPerPagelabel = QtWidgets.QLabel(self.centralwidget)
        self.recipesPerPagelabel.setObjectName("recipesPerPagelabel")
        self.horizontalLayout.addWidget(self.recipesPerPagelabel)
        self.recipesPerPagecomboBox = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.recipesPerPagecomboBox.sizePolicy().hasHeightForWidth())
        self.recipesPerPagecomboBox.setSizePolicy(sizePolicy)
        self.recipesPerPagecomboBox.setFocusPolicy(QtCore.Qt.NoFocus)
        self.recipesPerPagecomboBox.setObjectName("recipesPerPagecomboBox")
        self.horizontalLayout.addWidget(self.recipesPerPagecomboBox)
        self.recipesSlider = QtWidgets.QSlider(self.centralwidget)
        self.recipesSlider.setTracking(True)
        self.recipesSlider.setOrientation(QtCore.Qt.Horizontal)
        self.recipesSlider.setTickPosition(QtWidgets.QSlider.TicksBothSides)
        self.recipesSlider.setTickInterval(0)
        self.recipesSlider.setObjectName("recipesSlider")
        self.horizontalLayout.addWidget(self.recipesSlider)
        self.firstPageButton = QtWidgets.QPushButton(self.centralwidget)
        self.firstPageButton.setEnabled(True)
        self.firstPageButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.firstPageButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/document-page.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.firstPageButton.setIcon(icon)
        self.firstPageButton.setCheckable(False)
        self.firstPageButton.setObjectName("firstPageButton")
        self.horizontalLayout.addWidget(self.firstPageButton)
        self.previousPageButton = QtWidgets.QPushButton(self.centralwidget)
        self.previousPageButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.previousPageButton.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/document-page-previous.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.previousPageButton.setIcon(icon1)
        self.previousPageButton.setCheckable(False)
        self.previousPageButton.setObjectName("previousPageButton")
        self.horizontalLayout.addWidget(self.previousPageButton)
        self.nextPageButton = QtWidgets.QPushButton(self.centralwidget)
        self.nextPageButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.nextPageButton.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/document-page-next.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.nextPageButton.setIcon(icon2)
        self.nextPageButton.setCheckable(False)
        self.nextPageButton.setObjectName("nextPageButton")
        self.horizontalLayout.addWidget(self.nextPageButton)
        self.lastPageButton = QtWidgets.QPushButton(self.centralwidget)
        self.lastPageButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.lastPageButton.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/document-page-last.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.lastPageButton.setIcon(icon3)
        self.lastPageButton.setCheckable(False)
        self.lastPageButton.setObjectName("lastPageButton")
        self.horizontalLayout.addWidget(self.lastPageButton)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.recipeTableView = QtWidgets.QTableView(self.centralwidget)
        self.recipeTableView.setShowGrid(False)
        self.recipeTableView.setCornerButtonEnabled(False)
        self.recipeTableView.setObjectName("recipeTableView")
        self.verticalLayout.addWidget(self.recipeTableView)
        RecipeListWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(RecipeListWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 846, 30))
        self.menubar.setObjectName("menubar")
        self.menuQisit = QtWidgets.QMenu(self.menubar)
        self.menuQisit.setObjectName("menuQisit")
        self.menuRecipe = QtWidgets.QMenu(self.menubar)
        self.menuRecipe.setObjectName("menuRecipe")
        self.menuImport_2 = QtWidgets.QMenu(self.menuRecipe)
        self.menuImport_2.setObjectName("menuImport_2")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        RecipeListWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(RecipeListWindow)
        self.statusbar.setObjectName("statusbar")
        RecipeListWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(RecipeListWindow)
        self.toolBar.setObjectName("toolBar")
        RecipeListWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionfilterCategories = QtWidgets.QAction(RecipeListWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/bread.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionfilterCategories.setIcon(icon4)
        self.actionfilterCategories.setObjectName("actionfilterCategories")
        self.actionfilterCuisine = QtWidgets.QAction(RecipeListWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/cutleries.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionfilterCuisine.setIcon(icon5)
        self.actionfilterCuisine.setObjectName("actionfilterCuisine")
        self.actionfilterAuthor = QtWidgets.QAction(RecipeListWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/quill.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionfilterAuthor.setIcon(icon6)
        self.actionfilterAuthor.setObjectName("actionfilterAuthor")
        self.actionGourmet_DB = QtWidgets.QAction(RecipeListWindow)
        self.actionGourmet_DB.setObjectName("actionGourmet_DB")
        self.actionSave = QtWidgets.QAction(RecipeListWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/disk.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon7)
        self.actionSave.setObjectName("actionSave")
        self.actionRevert = QtWidgets.QAction(RecipeListWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/arrow-return-180-left.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRevert.setIcon(icon8)
        self.actionRevert.setObjectName("actionRevert")
        self.actionNew_Recipe = QtWidgets.QAction(RecipeListWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/plus.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew_Recipe.setIcon(icon9)
        self.actionNew_Recipe.setObjectName("actionNew_Recipe")
        self.actionDelete_Recipe_s = QtWidgets.QAction(RecipeListWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/minus.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Recipe_s.setIcon(icon10)
        self.actionDelete_Recipe_s.setObjectName("actionDelete_Recipe_s")
        self.actionQuit = QtWidgets.QAction(RecipeListWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionAbout = QtWidgets.QAction(RecipeListWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/qisit_24x24.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAbout.setIcon(icon11)
        self.actionAbout.setObjectName("actionAbout")
        self.actionData_editor = QtWidgets.QAction(RecipeListWindow)
        self.actionData_editor.setObjectName("actionData_editor")
        self.actionFilter = QtWidgets.QAction(RecipeListWindow)
        self.actionFilter.setObjectName("actionFilter")
        self.actionShow_Columns = QtWidgets.QAction(RecipeListWindow)
        self.actionShow_Columns.setObjectName("actionShow_Columns")
        self.actionShow_Toolbar = QtWidgets.QAction(RecipeListWindow)
        self.actionShow_Toolbar.setCheckable(True)
        self.actionShow_Toolbar.setObjectName("actionShow_Toolbar")
        self.menuQisit.addAction(self.actionSave)
        self.menuQisit.addAction(self.actionRevert)
        self.menuQisit.addAction(self.actionQuit)
        self.menuImport_2.addAction(self.actionGourmet_DB)
        self.menuRecipe.addAction(self.actionNew_Recipe)
        self.menuRecipe.addAction(self.actionDelete_Recipe_s)
        self.menuRecipe.addAction(self.menuImport_2.menuAction())
        self.menuHelp.addAction(self.actionAbout)
        self.menuSettings.addAction(self.actionShow_Toolbar)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionFilter)
        self.menuSettings.addAction(self.actionShow_Columns)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionData_editor)
        self.menubar.addAction(self.menuQisit.menuAction())
        self.menubar.addAction(self.menuRecipe.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionSave)
        self.toolBar.addAction(self.actionRevert)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionNew_Recipe)
        self.toolBar.addAction(self.actionDelete_Recipe_s)
        self.toolBar.addSeparator()

        self.retranslateUi(RecipeListWindow)
        self.actionShow_Toolbar.triggered['bool'].connect(self.toolBar.setVisible)
        QtCore.QMetaObject.connectSlotsByName(RecipeListWindow)

    def retranslateUi(self, RecipeListWindow):
        _translate = QtCore.QCoreApplication.translate
        RecipeListWindow.setWindowTitle(_translate("RecipeListWindow", "Recipelist"))
        self.recipesPerPagelabel.setText(_translate("RecipeListWindow", "Recipes per Page:"))
        self.menuQisit.setTitle(_translate("RecipeListWindow", "Qisit"))
        self.menuRecipe.setTitle(_translate("RecipeListWindow", "Recipe"))
        self.menuImport_2.setTitle(_translate("RecipeListWindow", "Import"))
        self.menuHelp.setTitle(_translate("RecipeListWindow", "Help"))
        self.menuSettings.setTitle(_translate("RecipeListWindow", "Settings"))
        self.toolBar.setWindowTitle(_translate("RecipeListWindow", "toolBar"))
        self.actionfilterCategories.setText(_translate("RecipeListWindow", "Categories"))
        self.actionfilterCategories.setToolTip(_translate("RecipeListWindow", "Filter categories"))
        self.actionfilterCuisine.setText(_translate("RecipeListWindow", "Cuisine"))
        self.actionfilterCuisine.setToolTip(_translate("RecipeListWindow", "Filter Cuisine"))
        self.actionfilterAuthor.setText(_translate("RecipeListWindow", "Author"))
        self.actionGourmet_DB.setText(_translate("RecipeListWindow", "Gourmet DB"))
        self.actionSave.setText(_translate("RecipeListWindow", "Save"))
        self.actionRevert.setText(_translate("RecipeListWindow", "Revert"))
        self.actionNew_Recipe.setText(_translate("RecipeListWindow", "New Recipe ..."))
        self.actionDelete_Recipe_s.setText(_translate("RecipeListWindow", "Delete Recipe(s)"))
        self.actionQuit.setText(_translate("RecipeListWindow", "Quit"))
        self.actionAbout.setText(_translate("RecipeListWindow", "About ..."))
        self.actionData_editor.setText(_translate("RecipeListWindow", "Data editor"))
        self.actionFilter.setText(_translate("RecipeListWindow", "Filter"))
        self.actionShow_Columns.setText(_translate("RecipeListWindow", "Show Columns"))
        self.actionShow_Toolbar.setText(_translate("RecipeListWindow", "Show Toolbar"))
from qisit.qt.resources import resources_rc
